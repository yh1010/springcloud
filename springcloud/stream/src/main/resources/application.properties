spring.application.name=stream
server.port=8083

# rabbitmq配置
spring.rabbitmq.host=139.224.113.2
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# stream
spring.cloud.stream.bindings.suyu-input.destination=suyu-topic
spring.cloud.stream.bindings.suyu-output.destination=suyu-topic

# 消息分组：解决消费者集群中一条消息被多次消费
spring.cloud.stream.bindings.suyu-input.group=g1
spring.cloud.stream.bindings.suyu-output.group=g2

# 消息分区：可以实现相同特征的消息总是被同一个实例处理
# 开启消费分区（消费者上配置
spring.cloud.stream.bindings.suyu-input.consumer.partitioned=true
# 消费者实例个数（消费者上配置
spring.cloud.stream.instance-count=2
# 当前实例的下标（消费者上配置
spring.cloud.stream.instance-index=0
# 表示这条消息被下标为1的消费者消费（生产者上配置
spring.cloud.stream.bindings.suyu-output.producer.partition-key-expression=1
# 消费端的节点数量（生产者上配置
spring.cloud.stream.bindings.suyu-output.producer.partition-count=2